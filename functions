#!/usr/bin/env bash

# 替换指定文件中的对应文本
# example:
# replace test test1 a.txt
replace() {
  echo $3
  if [[ $(uname -a | cut -d ' ' -f 1) == "Linux" ]]; then
    sed -i "s/$1/$2/g" $3
  else
    sed -i "" "s/$1/$2/g" $3
  fi
}

# 判断指定文本是否存在在指定数组中
# example:
# arr="1 2 3"
# str="1"
# in_array arr $str
in_array() {
  local array="$1[@]"
  shift
  local needle=$1
  shift
  local result=1
  for element in "${!array}"; do
    if [[ $element == $needle ]]; then
      result=0
      break
    fi
  done
  return $result
}

# 遍历指定目录下所有文件，并调用指定函数处理
# func(){
#   echo $1
# }
# scandir ~/ func
scandir() {
  local dir=$1
  local callback=$2
  for i in $(ls $dir); do
    if [ -d $dir/$i ]; then
      scandir $dir/$i $callback
    fi
    if [ -f $dir/$i ]; then
      $callback $dir/$i
    fi
  done
}

# 检查命令是否存在
program_exists() {
  local ret='0'
  command -v $1 >/dev/null 2>&1 || { local ret='1'; }

  # fail on non-zero return value
  if [ "$ret" -ne 0 ]; then
    return 1
  fi

  return 0
}

# 获取不同格式的当前日期时间
get_datetime() {
  case $1 in
  'n')
    echo $(date '+%Y%m%d%H%M%S')
    ;;
  '-')
    echo $(date '+%Y-%m-%d-%H-%M-%S')
    ;;
  '/')
    echo $(date '+%Y/%m/%d %H:%M:%S')
    ;;
  '_')
    echo $(date '+%Y_%m_%d_%H_%M_%S')
    ;;
  'd')
    echo $(date '+%Y%m%d')
    ;;
  '-d')
    echo $(date '+%Y-%m-%d')
    ;;
  '/d')
    echo $(date '+%Y/%m/%d')
    ;;
  '_d')
    echo $(date '+%Y_%m_%d')
    ;;
  't')
    echo $(date '+%H%M%S')
    ;;
  '-t')
    echo $(date '+%H-%M-%S')
    ;;
  ':t')
    echo $(date '+%H:%M:%S')
    ;;
  '_t')
    echo $(date '+%H_%M_%S')
    ;;
  *)
    echo $(date '+%Y-%m-%d %H:%M:%S')
    ;;
  esac
}
